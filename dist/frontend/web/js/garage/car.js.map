{"version":3,"sources":["../../../../../frontend/web/js/garage/car.js"],"names":["carUrls","DocumentFragment","prototype","toString","element","document","createElement","appendChild","innerHTML","carType","CarController","$","on","CarFormEvents","addCarBtnClick","addClick","carsBlock","getElementById","template","carFields","console","log","Error","content","tplSource","cloneNode","Handlebars","compile","html","append","carFormData","Promise","resolve","reject","ajax","url","get","data","cache","type","processData","contentType","success","response","status","JSON","parse","car","error","e","target","preventDefault","carData","CarForm","mainCar","set","promise","carController","add","then","click","render","id","FormData","attachAddBtnClick","attachAddClick"],"mappings":"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","file":"car.js","sourcesContent":["(function () {\n  const carUrls = {\n    1: '/garage/api/add', // my car url\n    2: '', // ex car url\n    3: '', // wish car url\n    4: '' // test drive car url\n  };\n\n  DocumentFragment.prototype.toString = function () {\n    let element = document.createElement('div');\n    element.appendChild(this);\n\n    return element.innerHTML;\n  };\n\n  let carType = null;\n\n  class CarController\n  {\n    attachAddBtnClick() {\n      $('.add-car-btn').on('click', CarFormEvents.addCarBtnClick);\n    }\n    attachAddClick() {\n      $('#add-car-btn').on('click', CarFormEvents.addClick);\n    }\n    constructor() {\n      this.carsBlock = document.getElementById('garage-my-cars');\n      this.template = document.getElementById('my-car-tpl');\n    }\n    render(carFields) {\n      console.log(carFields);\n      if (this.carsBlock == null) {\n        throw Error('Cars block not founded');\n      }\n\n\n      console.log(this.template.content);\n      let tplSource = this.template.content.cloneNode(true);\n\n      let template = Handlebars.compile(tplSource.toString());\n      let html = template(carFields);\n\n      $(this.carsBlock).append(html);\n    }\n\n    /**\n     *\n     * @param {FormData} carFormData\n     * @return {Promise}\n     */\n    add(carFormData) {\n      return new Promise(function (resolve, reject) {\n        $.ajax({\n          url: carUrls[carFormData.get('Car[car_type]')], // get car type url\n          data: carFormData,\n          cache: false,\n          type: \"POST\",\n          processData: false,\n          contentType: false,\n          success: (response) => {\n            console.log(carFormData);\n\n\n            console.log(response);\n            response.status == 'success' ? resolve(JSON.parse(response.car)) : reject('Some error3');\n          },\n          error: () => reject('Some error2')\n        });\n      });\n    }\n  }\n\n  const CarFormEvents = {\n    addCarBtnClick: function (e) {\n      console.log('Add car btn click');\n      // get car type from data attribute\n      carType = $(e.target).data('car-type');\n      e.preventDefault();\n    },\n    addClick: function (e) {\n      console.log('Add car');\n      let carData = CarForm.data;\n      var mainCar = false;\n      if (carData.get('Car[main_car]') == 'on') {\n        mainCar = true;\n        carData.set('Car[main_car]', 1);\n      }\n      carData.append('Car[car_type]', carType);\n      let promise = carController.add(carData);\n\n      promise.then(function (carFields) {\n        console.log(carFields);\n        $('.mfp-close').click();\n        carFields['main_car'] = mainCar;\n        carController.render(carFields);\n      }, function () {\n        console.log('Error');\n      });\n      e.preventDefault();\n    }\n  };\n\n  const CarForm = {\n    id: 'addcar',\n    get data() {\n      return new FormData(document.getElementById(this.id));\n    }\n  };\n\n  var carController = new CarController();\n\n  // attach garage events\n  carController.attachAddBtnClick();\n  carController.attachAddClick();\n})();"]}